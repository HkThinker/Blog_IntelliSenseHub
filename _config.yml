# Hexo Configuration
## Docs: https://hexo.io/docs/configuration.html
## Source: https://github.com/hexojs/hexo/

# Site
title: Hexo
subtitle: ''
description: ''
keywords:
author: Xia yiwei
language: en
timezone: ''

# URL
## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'
url: http://example.com
permalink: :year/:month/:day/:title/
permalink_defaults:
pretty_urls:
  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks
  trailing_html: true # Set to false to remove trailing '.html' from permalinks

# Directory
source_dir: source
public_dir: public
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code
i18n_dir: :lang
skip_render:

# Writing
new_post_name: :title.md # File name of new posts
default_layout: post
titlecase: false # Transform title into titlecase
external_link:
  enable: true # Open external links in new tab
  field: site # Apply to the whole site
  exclude: ''
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true
syntax_highlighter: highlight.js
highlight:
  line_number: true
  auto_detect: false
  tab_replace: ''
  wrap: true
  hljs: false
prismjs:
  preprocess: true
  line_number: true
  tab_replace: ''

# Home page setting
# path: Root path for your blogs index page. (default = '')
# per_page: Posts displayed per page. (0 = disable pagination)
# order_by: Posts order. (Order by date descending by default)
index_generator:
  path: ''
  per_page: 10
  order_by: -date

# Category & Tag
default_category: uncategorized
category_map:
tag_map:

# Metadata elements
## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta
meta_generator: true

# Date / Time format
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss
## updated_option supports 'mtime', 'date', 'empty'
updated_option: 'mtime'

# Pagination
## Set per_page to 0 to disable pagination
per_page: 10
pagination_dir: page

# Include / Exclude file(s)
## include:/exclude: options only apply to the 'source/' folder
include:
exclude:
ignore:

# Extensions
## Plugins: https://hexo.io/plugins/
## Themes: https://hexo.io/themes/
theme: landscape

# Deployment
## Docs: https://hexo.io/docs/one-command-deployment
deploy: 
  type: git 
  repo: https://github.com/HkThinker/HkThinker.github.io
  branch: gh-pages


## 参考链接
# https://hexo.io/zh-cn/docs/github-pages#%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2  

## 准备工作: 连接GitHub,要配置好GitHub账号的ssh 


# 在Hexo中发布一篇博客文章通常需要以下步骤：

# 1. 创建一篇新博客文章：
#    使用Hexo的命令行工具创建一篇新的博客文章。在终端中导航到您的Hexo博客目录，然后运行以下命令来创建新文章：

#    ```
#    hexo new "文章标题"
#    ```

#    这将在Hexo的`source/_posts`目录下创建一个以Markdown格式编写的新文章文件，文件名通常以日期和文章标题命名。

# 2. 编辑博客文章：
#    打开刚创建的Markdown文件，并在其中编写博客内容。您可以使用Markdown语法来格式化文本、添加图片、链接等。

# 3. 保存博客文章：
#    在编辑完成后，保存Markdown文件。

# 4. 生成静态网站文件：
#    在Hexo博客目录中，运行以下命令来生成静态网站文件：

#    ```
#    hexo generate
#    ```

#    这将会将您的博客文章编译为HTML文件，并将其放置在`public`目录下。

# 5. 预览博客文章（可选）：
#    您可以使用Hexo提供的本地服务器来预览您的博客文章。运行以下命令来启动本地服务器：

#    ```
#    hexo server
#    ```

#    然后在浏览器中访问`http://localhost:4000`以查看您的博客文章。

# 6. 部署博客文章：
#    一旦满意，您可以使用Hexo将博客文章部署到您的博客托管平台（例如GitHub Pages）。首先，确保您的博客配置文件中包含正确的部署设置。然后运行以下命令：

#    ```
#    hexo deploy
#    ```

#    这将把生成的静态文件上传到您的托管平台。

# 7. 查看已发布文章：
#    访问您的博客网站，查看已发布的文章。

# 这是发布一篇博客文章的基本流程。您可以根据需要自定义Hexo博客的主题、插件和配置，以满足您的需求。记住在每个步骤完成后保存文件和提交更改，以确保您的工作不会丢失。

